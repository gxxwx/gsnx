from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import logging
import asyncio

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "8231522060:AAGU_xc9C5-_CGemECqCVguSb3xEJ8spcck"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏)
main_menu = InlineKeyboardMarkup(row_width=2)
main_menu.add(
    InlineKeyboardButton("üì¶ –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="buy"),
    InlineKeyboardButton("üìú –ü—Ä–∞–≤–∏–ª–∞", callback_data="rules"),
    InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/gsngsupport")
)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GSNX!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@dp.callback_query_handler(lambda call: True)
async def handle_buttons(call: types.CallbackQuery):
    if call.data == "buy":
        await call.message.edit_text("üí≥ –ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—É–º–º—É –Ω–∞ ... (—Å—é–¥–∞ –≤—Å—Ç–∞–≤—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é)")
    elif call.data == "rules":
        await call.message.edit_text("üìú –ü—Ä–∞–≤–∏–ª–∞:\n1. –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º\n2. ...")
    await call.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
